name: Build and Deploy to Minikube

on:
  push:
    branches:
      - master
  workflow_dispatch: # Allows manual triggering

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker to use Minikube's environment
        run: |
          echo "Configuring Docker to use Minikube's daemon..."
          & minikube -p minikube docker-env | Invoke-Expression
        shell: powershell

      # Build and push backend image
      - name: Build Backend Docker image
        run: |
          cd app/backend
          docker build -t samiscd/recipe-planner-mern-backend:latest .
        shell: powershell

      - name: Build Frontend Docker image
        run: |
          cd app/frontend
          docker build -t samiscd/recipe-planner-mern-frontend:latest .
        shell: powershell

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images to Docker Hub
        run: |
          docker push samiscd/recipe-planner-mern-backend:latest
          docker push samiscd/recipe-planner-mern-frontend:latest
        shell: powershell

      - name: Create backend-env secret if it doesn't exist
        run: |
          $secretExists = kubectl get secret backend-env --ignore-not-found
          if (-not $secretExists) {
            echo "Creating backend-env secret..."
            kubectl create secret generic backend-env `
              --from-literal=PORT=5000 `
              --from-literal=MONGO_URI="mongodb://mongo:27017/recipe-planner" `
              --from-literal=JWT_SECRET="temporary_development_secret" `
              --from-literal=CORS_ORIGIN="*"
            echo "Secret backend-env created"
          } else {
            echo "Secret backend-env already exists"
          }
        shell: powershell

      - name: Deploy to Minikube
        run: |
          kubectl apply -f deployment-mongo.yaml
          kubectl apply -f service-mongo.yaml
          Start-Sleep -Seconds 10

          kubectl apply -f deployment-backend.yaml
          kubectl apply -f service-backend.yaml
          Start-Sleep -Seconds 10

          kubectl apply -f deployment-frontend.yaml
          kubectl apply -f service-frontend.yaml

          echo "Deployment completed."
          $url = (minikube service recipe-planner-frontend-service --url)
          echo "Frontend available at: $url"
        shell: powershell
